<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 开启核心IOC注解扫描功能 -->
	<!-- 让Spring自动的将XxxController纳入容器管理 -->
	<context:component-scan
			base-package="cn.tedu" />
			
	<!-- 开启SpringWebMVC注解扫描功能 -->
	<!-- 配置 *.co请求路径 和 XxxController对应关系 -->
	<!-- 配置启用：RequestMappingHandlerMapping
			和 RequestMappingHandlerAdapter 组件 
		在Spring3.2之后，不需要详细配置以上两个组件，
		可简化使用以下一个标签即可！-->
	<mvc:annotation-driven/>
	
	<!-- 配置使用InternalResourceViewResolver,
	  不再使用默认的UrlBasedViewResolver，
	  默认的视图解析器只是简单的拿着视图名作为资源名。
	  IRVR内部资源视图解析器，可以帮着做些简化，
	  可以帮着，给视图名添加前缀和后缀。
	  /WEB-INF/jsp/hello.jsp
	  可简写为：jsp/hello 				-->
	<bean id="viewResolver"
			class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>		
	</bean>
	
	<!-- 声明创建配置参数的集合 -->
	<!-- 将DBUtil代码中该行创建对象的代码，
	  转交给Spring 来创建：
	  Properties prop = new Properties(); -->
	<util:properties id="db"
		location="classpath:db.properties" />
	
	<!-- 声明创建连接池 -->
	<!-- 不再像DBUtil类中，纯手工的new对象了，
		对象的创建和关系的维护，交给Spring来做。
		dataSource = new BasicDataSource(); -->
	<bean id="dataSource"
			class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{db.driver}" />
		<property name="url" value="#{db.url}"/>
		<property name="username" value="#{db.user}"/>
		<property name="password" value="#{db.password}"/>
		<property name="initialSize" value="#{db.initSize}"/>
		<property name="maxActive" value="#{db.maxSize}"/>
	</bean>
	
</beans>




